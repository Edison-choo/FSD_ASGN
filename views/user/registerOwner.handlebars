<div class="FDefaultTab regForm">
    <h5>Register (Owner)</h5>
  <form method="POST" action="/user/registeringOwner">
    <!-- Restaurant Name input -->
    <div class="form-outline mb-4">
      <input type="text" id="restname" class="form-control" name="restname" required />
      <label class="form-label" for="restname">Restaurant's Owner Name</label>
    </div>

    <!-- Email input -->
    <div class="form-outline mb-4">
      <input type="email" id="email" class="form-control" name="email" required />
      <label class="form-label" for="email">Email address</label>
    </div>

    <!-- Phone number input -->
    <div class="form-outline mb-4">
      <input type="number" id="phone" class="form-control" name="phone" required />
      <label class="form-label" for="phone">Phone No.</label>
    </div>

    <!-- Address input -->
    <div class="form-outline mb-4">
      <input type="text" id="address" class="form-control" name="address" required />
      <label class="form-label" for="address">Address</label>
    </div>

    <!-- Password input -->
    <div class="form-outline mb-4">
      <input type="password" id="password" class="form-control" name="password" value="" required />
      <label class="form-label" for="password">Password</label>
    </div>

    <!-- Password input -->
    <div class="form-outline mb-4">
      <input type="password" id="cpassword" class="form-control" name="cpassword" value="" required />
      <label class="form-label" for="cpassword">Confirm Password</label>
    </div>

    <!-- UEN input -->
    <div class="form-outline mb-4">
      <input type="text" id="uen" class="form-control" name="uen" required />
      <label class="form-label" for="uen">Restaurant UEN</label>
      <p style="color: red; font-size: 13px" id="errMsg">*Enter valid UEN to proceed</p>
    </div>

    <!-- Submit button -->
    <button type="submit" class="FDefaultButton regBtn btn btn-primary btn-lg btn-block" id="regBtn">Sign Up</button>

    <!-- Register buttons -->
    <div class="text-center">
      <p>
        Already a member? <a href="/user/login">Login</a>
      <br>
      Be a customer? <a href="/user/register">Register as customer</a>
      </p>
    </div>
  </form>
</div>
<script>
  let input = document.getElementById("uen");
  let button = document.getElementById("regBtn");

  button.disabled = true;
  input.addEventListener("change", validateUEN);

  function validateUEN () {
    const entityTypeIndicator = [
        'LP', 'LL', 'FC', 'PF', 'RF', 'MQ', 'MM', 'NB', 'CC', 'CS', 'MB', 'FM', 'GS', 'GA',
        'GB', 'DP', 'CP', 'NR', 'CM', 'CD', 'MD', 'HS', 'VH', 'CH', 'MH', 'CL', 'XL', 'CX',
        'RP', 'TU', 'TC', 'FB', 'FN', 'PA', 'PB', 'SS', 'MC', 'SM'
    ];
    var debug = true;
    // (A) Businesses registered with ACRA
    if (document.getElementById("uen").value.length === 9) {
        // check that last character is a letter
        if (!isNaN(document.getElementById("uen").value[document.getElementById("uen").value.length - 1])) {
            if (debug) { console.log('(A) last character is not an alphabet'); }
            return false;
        }

        for (var i = 0; i < document.getElementById("uen").value.length - 1; i++) {
            // check that first 8 letters are all numbers
            if (isNaN(document.getElementById("uen").value[i])) {
                if (debug) { console.log('(A) there are non-numbers in 1st to 8th letters'); }
                return false;
            }
        }

        // (A) Businesses registered with ACRA (SUCCESS)
        if (debug) { console.log('valid (A) Businesses registered with ACRA'); }
        button.disabled = false;
        document.getElementById("errMsg").style.display = "none";
        return true;
    }
    else if (document.getElementById("uen").value.length === 10) {
        // check that last character is a letter
        if (!isNaN(document.getElementById("uen").value[document.getElementById("uen").value.length - 1])) {
            if (debug) { console.log('(B)(C) last character is not an alphabet'); }
            return false;
        }

        // (B) Local companies registered with ACRA
        if (!isNaN(document.getElementById("uen").value[0]) && !isNaN(document.getElementById("uen").value[1]) && !isNaN(document.getElementById("uen").value[2]) && !isNaN(document.getElementById("uen").value[3])) {
            // check that 5th to 9th letters are all numbers
            if (!isNaN(document.getElementById("uen").value[4]) && !isNaN(document.getElementById("uen").value[5]) && !isNaN(document.getElementById("uen").value[6]) &&
                !isNaN(document.getElementById("uen").value[7]) && !isNaN(document.getElementById("uen").value[8])) {
                // (B) Local companies registered with ACRA (SUCCESS)
                if (debug) { console.log('valid (B) Local companies registered with ACRA'); }
                return true;
            } else {
                if (debug) { console.log('(B) there are non-numbers in 5th to 9th letters'); }
                return false;
            }
        }
        // (C) All other entities which will be issued new UEN
        else {
            // check that 1st letter is either T or S or R
            if (document.getElementById("uen").value[0] !== 'T' && document.getElementById("uen").value[0] !== 'S' && document.getElementById("uen").value[0] !== 'R') {
                if (debug) { console.log('(C) 1st letter is incorrect'); }
                return false;
            }

            // check that 2nd and 3rd letters are numbers only
            if (isNaN(document.getElementById("uen").value[1]) || isNaN(document.getElementById("uen").value[2])) {
                if (debug) { console.log('(C) 2nd and 3rd letter is incorrect'); }
                return false;
            }

            // check that 4th letter is an alphabet
            if (!isNaN(document.getElementById("uen").value[3])) {
                if (debug) { console.log('(C) 4th letter is not an alphabet'); }
                return false;
            }

            // check entity-type indicator
            var entityTypeMatch = false,
                entityType = String(document.getElementById("uen").value[3]) + String(document.getElementById("uen").value[4]);
            for (var i = 0; i < entityTypeIndicator.length; i++) {
                if (String(entityTypeIndicator[i]) === String(entityType)) {
                    entityTypeMatch = true;
                }
            }
            if (!entityTypeMatch) {
                if (debug) { console.log('(C) entity-type indicator is invalid'); }
                return false;
            }

            // check that 6th to 9th letters are numbers only
            if (isNaN(document.getElementById("uen").value[5]) || isNaN(document.getElementById("uen").value[6]) || isNaN(document.getElementById("uen").value[7]) || isNaN(document.getElementById("uen").value[8])) {
                if (debug) { console.log('(C) 2nd and 3rd letter is incorrect'); }
                return false;
            }

            // (C) All other entities which will be issued new UEN (SUCCESS)
            if (debug) { console.log('valid (C) All other entities which will be issued new UEN'); }
            button.disabled = false;
            document.getElementById("errMsg").style.display = "none";
            return true;
        }
    }

    return false;
}
</script>