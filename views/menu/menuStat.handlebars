<script data-require="jquery@3.1.1" data-semver="3.1.1" src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    datalist {
        display: flex;
        justify-content: space-between;
        width: 50%;
    }

    input:focus {
        width: 50%;
        background-color:black;
        
    }

</style>

<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <div class="menuNav">
            <button class="btn" onclick="window.location.href='/menu/updateMenu'">Table View (Edit)</button>
            <button class="btn" onclick="window.location.href='/menu'" >User View</button>
            <button class="btn" style="cursor: not-allowed;">Menu Statistics</button>
        </div>
        <h1 class="menuTitle">STATISTICS</h1>
        <div class="row" style="margin-top: 25px;">
            <div class="col-md-8">
                <div class="FDefaultTab menuGraph">
                    <canvas id="myChart"></canvas>
                </div>
            </div>
            <div class="col-md-4">
                <div class="FDefaultTab menuSubGraph">
                    <div id="graphSubTitle">Top 5 ordered food</div>
                    <ol class="list-group list-group-flush list-group-numbered">
                        <li class="list-group-item"></li>
                        <li class="list-group-item"></li>
                        <li class="list-group-item"></li>
                        <li class="list-group-item"></li>
                        <li class="list-group-item"></li>
                    </ol>
                </div>
                <div class="FDefaultTab menuSubGraph">
                    <div id="graphSubTitle">Type Picker</div>
                    <select class="form-select typePicker" aria-label="Default select example">
                        <option value="">All Types</option>
                        {{#each types}}
                        <option value="{{this}}">{{this}}</option>
                        {{/each}}
                    </select>
                </div>
            </div>
        </div>
        <hr style="margin-top: 50px;">
        
        
    
    <div class="row" style="margin-top: 25px;">
            <div class="col-md-8">
                <div class="FDefaultTab menuGraph">
                    <canvas id="myChart2"></canvas>
                </div>
            </div>
            <div class="col-md-4">
                <div class="FDefaultTab menuSubGraph">
                    <div id="graphSubTitle" style="text-align: center; margin-bottom:0px;">Total Earnings</div>
                    <div id="totalEarnings" style="font-weight:600; font-size:3.0em; text-align:center;"></div>
                    {{!-- <div class="form-group">
                        <div class="form-check">
                        <input class="form-check-input" onclick="graph2('')" type="radio" name="flexRadioDefault2" id="flexRadioDefault1" checked>
                        <label class="form-check-label" for="flexRadioDefault1">
                            All time
                        </label>
                    </div>
                    <div class="form-check" style="margin-top: 8px;">
                        <input class="form-check-input" onclick="graph2('2021')" type="radio" name="flexRadioDefault2" id="flexRadioDefault2">
                        <label class="form-check-label" for="flexRadioDefault2">
                            2021
                        </label>
                    </div>
                    <div class="form-check" style="margin-top: 8px;">
                        <input class="form-check-input" onclick="graph2('2022')" type="radio" name="flexRadioDefault2" id="flexRadioDefault2">
                        <label class="form-check-label" for="flexRadioDefault2">
                            2022
                        </label>
                    </div>
                    <div class="form-check" style="margin-top: 8px;">
                        <input class="form-check-input" onclick="graph2('2023')" type="radio" name="flexRadioDefault2" id="flexRadioDefault2">
                        <label class="form-check-label" for="flexRadioDefault2">
                            2023
                        </label>
                    </div>
                    </div> --}}
                    {{!-- <input type="range" list="tickmarks"  step="10" style="width: 100%; color:black;">

                    <datalist id="tickmarks"  style="width: 105%;">
                        <option value="0" label="Jan"></option>
                        <option value="10"></option>
                        <option value="20"></option>
                        <option value="30"></option>
                        <option value="40" label="May"></option>
                        <option value="50"></option>
                        <option value="60"></option>
                        <option value="70"></option>
                        <option value="80"  label="Aug"></option>
                        <option value="90"></option>
                        <option value="100"></option>
                        <option value="110" label="Dec"></option>
                        <option value="120"></option>
                    </datalist> --}}
                </div>
                <div class="FDefaultTab menuSubGraph">
                    <div id="graphSubTitle">Month Picker</div>
                    <select class="form-select monthPicker" aria-label="Default select example">
                        <option value="">Whole Year</option>
                        <option value="Jan">January</option>
                        <option value="Feb">February</option>
                        <option value="Mar">March</option>
                        <option value="Apr">April</option>
                        <option value="May">May</option>
                        <option value="Jun">June</option>
                        <option value="Jul">July</option>
                        <option value="Aug">August</option>
                        <option value="Sep">September</option>
                        <option value="Oct">October</option>
                        <option value="Nov">November</option>
                        <option value="Dec">December</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-1">
    </div>
</div>

<script>
    var myChart, myChart2;
    $(function() {
        fetch('/menu/getStatData', {
            headers: {
                "Content-Type": "application/json"
            },
        })
        .then(response => {
            console.log(response);
            return response.json();
        })
        .then(data => {
            console.log(data);
            const labels = data.menus.map(f => f.name);
            const orderList = [];
            for (i=0; i<data.orders.length;i++) {
                for (j=0; j<data.orders[i].food.length;j++) {
                    for (k=0; k<data.orders[i].food[j].orders.length;k++) {
                        for (l=0; l<parseInt(data.orders[i].food[j].orders[k].quantity);l++) {
                            orderList.push(data.orders[i].food[j].id);
                        }
                    }
                }
            }
            const dataList = []
            data.menus.forEach((menu) => {
                if (orderList.indexOf(menu.id.toString()) >= 0) {
                    dataList.push(orderList.filter(n => n == menu.id).length);
                } else {
                    dataList.push(0)
                }
            })
            console.log(dataList)
            const dataStat = {
                labels: labels,
                datasets: [{
                    label: 'Orders',
                    backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1,
                    data: dataList,
                }]
            };
            const config = {
                type: 'bar',
                data:dataStat,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            font: { weigth: 'bold', size: 20 },
                            text: 'Number of orders for each food in all types'
                        }
                    },
                    scale: {
                        ticks: {
                            precision: 0
                        }
                    }
                }
            };
            myChart = new Chart(
                document.getElementById('myChart'),
                config
            );
            const dataList2 = []
            for (i=1;i<13;i++) {
                dataList2.push((data.orders.filter(f => f.date.substr(0, 4) == '2021' && parseInt(f.date.substr(5, 2)) == i )).reduce((x, y) => {
                    return x + y.total
                },0));
            }
            const dataStat2 = {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: 'Earnings',
                    backgroundColor: '#ffb03b',
                    borderColor: '#ffb03b',
                    data: dataList2,
                }]
            };
            const config2 = {
                type: 'line',
                data: dataStat2,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            font: { weigth: 'bold', size: 20 },
                            text: 'Money earned montly in 2021'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            };
            myChart2 = new Chart(
                document.getElementById('myChart2'),
                config2
            );
            data.topMenu.forEach((food, i) => {
                $('.menuSubGraph .list-group .list-group-item').eq(i).text(`${food.name} ---> ${food.count} sold`);
            });
            $("#totalEarnings").text(`$${data.total}`);
        })
        .catch(err => console.error(err));
    })
    
    function graph1(type) {
        myChart.destroy();
        fetch('/menu/getStatData', {
            headers: {
                "Content-Type": "application/json"
            },
        })
        .then(response => {
            return response.json();
        })
        .then(data => {
            const labels = type == '' ? data.menus.map(f => f.name) : data.menus.filter(d => d.type == type).map(f => f.name);
            const orderList = [];
            for (i=0; i<data.orders.length;i++) {
                for (j=0; j<data.orders[i].food.length;j++) {
                    for (k=0; k<data.orders[i].food[j].orders.length;k++) {
                        for (l=0; l<parseInt(data.orders[i].food[j].orders[k].quantity);l++) {
                            orderList.push(data.orders[i].food[j].id);
                        }
                    }
                }
            }
            console.log(orderList)
            const dataList = []
            data.menus.forEach((menu) => {
                if (type != '') {
                    if (menu.type == type) {
                        if (orderList.indexOf(menu.id.toString()) >= 0) {
                            dataList.push(orderList.filter(n => n == menu.id).length);
                        } else {
                            dataList.push(0)
                        }
                    }
                } else {
                    if (orderList.indexOf(menu.id.toString()) >= 0) {
                        dataList.push(orderList.filter(n => n == menu.id).length);
                    } else {
                        dataList.push(0)
                    }
                }
            })
            console.log(dataList)
            const dataStat = {
                labels: labels,
                datasets: [{
                    label: 'Orders',
                    backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1,
                    data: dataList,
                }]
            };
            type = type === '' ? 'all types' : `${type} type`;
            const config = {
                type: 'bar',
                data:dataStat,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            font: { weigth: 'bold', size: 20 },
                            text: `Amount of orders for food in ${type}`
                        }
                    },
                    scale: {
                        ticks: {
                            precision: 0
                        }
                    }
                }
            };
            myChart = new Chart(
                document.getElementById('myChart'),
                config
            );
        })
        .catch(err => console.error(err));
    }

    function graph2(year) {
        myChart2.destroy();
        fetch('/menu/getStatData', {
            headers: {
                "Content-Type": "application/json"
            },
        })
        .then(response => {
            return response.json();
        })
        .then(data => {
            const dataList2 = []
            for (i=1;i<13;i++) {
                if (year != '') {
                    dataList2.push((data.orders.filter(f => f.date.substr(0, 4) == year && parseInt(f.date.substr(5, 2)) == i )).reduce((x, y) => {
                        return x + y.total
                    },0));
                } else {
                    dataList2.push((data.orders.filter(f => parseInt(f.date.substr(5, 2)) == i )).reduce((x, y) => {
                        return x + y.total
                    },0));
                }
            }
            const dataStat2 = {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: '$',
                    backgroundColor: '#ffb03b',
                    borderColor: '#ffb03b',
                    data: dataList2,
                }]
            };
            const config2 = {
                type: 'line',
                data: dataStat2,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            font: { weigth: 'bold', size: 20 },
                            text: 'Money earned monthly'
                        }
                    }
                }
            };
            myChart2 = new Chart(
                document.getElementById('myChart2'),
                config2
            );
        })
        .catch(err => console.error(err));
    }

    function graph3(month) {
        myChart2.destroy();
        fetch('/menu/getStatData', {
            headers: {
                "Content-Type": "application/json"
            },
        })
        .then(response => {
            return response.json();
        })
        .then(data => {
            const dataList2 = []
            const monthdays = {'Jan':31, 'Feb':28, "Mar":31, 'Apr':30, 'May':31, 'Jun':30, 'Jul':31, 'Aug':31, 'Sep':30, 'Oct':31, 'Nov':30, 'Dec':31}
            var days = []
            if (month != '') {
                for (i=1;i<monthdays[month]+1;i++) {
                
                    days.push(i)
                    dataList2.push((data.orders.filter(f => f.date.substr(0, 4) == '2021' && parseInt(f.date.substr(5,2)) == Object.keys(monthdays).indexOf(month)+1 && parseInt(f.date.substr(8, 2)) == i )).reduce((x, y) => {
                        return x + y.total
                    },0));
                }
            } else {
                days = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                for (i=1;i<13;i++) {
                    dataList2.push((data.orders.filter(f => parseInt(f.date.substr(5, 2)) == i )).reduce((x, y) => {
                        return x + y.total
                    },0));
                }
            }
            const dataStat2 = {
                labels: days,
                datasets: [{
                    label: '$',
                    backgroundColor: '#ffb03b',
                    borderColor: '#ffb03b',
                    data: dataList2,
                }]
            };
            const config2 = {
                type: 'line',
                data: dataStat2,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            font: { weigth: 'bold', size: 20 },
                            text: days.length === 12 ? 'Money earned monthly in 2021' : `Money earned in ${month}`
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            };
            myChart2 = new Chart(
                document.getElementById('myChart2'),
                config2
            );
        })
        .catch(err => console.error(err));
    }

    $('.typePicker').on('change', () => {
        graph1($('.typePicker').val())
    });

    $('.monthPicker').on('change', () => {
        graph3($('.monthPicker').val())
    });

    
</script>